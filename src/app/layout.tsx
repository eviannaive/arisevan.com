import type { Metadata } from "next";
import { Geist_Mono, Silkscreen } from "next/font/google";
import Nav from "@/components/layouts/Nav";
import Image from "next/image";
import "./globals.css";

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const silkscreen = Silkscreen({
  variable: "--font-silkscreen",
  weight: ["400"],
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const data_menu = [
  {
    img: "/menu/js.svg",
    label: "javascript",
  },
  {
    img: "/menu/react.svg",
    label: "react",
  },
  {
    img: "/menu/vue.svg",
    label: "vue",
  },
  {
    img: "/menu/workflow.svg",
    label: "workflow",
  },
  {
    img: "/menu/fish.svg",
    label: "arisevan",
  },
];

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistMono.variable} ${silkscreen.variable} antialiased`}
      >
        <div className="fixed top-0 left-0 z-[-1] w-screen h-screen bg-[url(/common/bg.svg)]"></div>
        <Nav />
        <div className="flex h-(--content-height)">
          <div className="w-(--menu-width) border-r-2 border-primary flex bg-white/70 ">
            <div className="w-24 p-4 relative shrink-0">
              <div className="absolute w-1/2 top-0 left-0 bg-gray-300 h-full"></div>
              <div className="w-full grid grid-cols-1 gap-4 relative z-10">
                {data_menu.map((d, index) => (
                  <button
                    key={index}
                    className="w-full p-2 bg-white rounded-full grid place-content-center shadow-common cursor-pointer hover:shadow-(--shadow-float) hover:border-2 hover:border-primary-800/80 hover:bg-gray-100"
                  >
                    <Image src={d.img} alt={d.label} width="50" height="50" />
                  </button>
                ))}
              </div>
            </div>
            <div className="flex-grow pr-4 py-6 font-mono custom-scrollbar overflow-y-scroll">
              <ul className="grid grid-cols-1 gap-4 break-words w-full">
                {Array(20)
                  .fill(null)
                  .map((d, index) => (
                    <li
                      className="hover:text-primary-900 cursor-pointer hover:underline"
                      key={index}
                    >
                      gkjfdkl;gjdlfksjg
                    </li>
                  ))}
              </ul>
            </div>
          </div>
          <div className="flex-grow">{children}</div>
        </div>
      </body>
    </html>
  );
}
